// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { z } from 'zod';

import { GeneratedSchema, Guard } from '../foundations';
import { PasscodeType } from './custom-types';

export type CreatePasscode = {
  id: string;
  sessionId: string;
  phone?: string | null;
  email?: string | null;
  type: PasscodeType;
  code: string;
  consumed?: boolean;
  tryCount?: number;
  createdAt?: number;
};

export type Passcode = {
  id: string;
  sessionId: string;
  phone: string | null;
  email: string | null;
  type: PasscodeType;
  code: string;
  consumed: boolean;
  tryCount: number;
  createdAt: number;
};

const createGuard: Guard<CreatePasscode> = z.object({
  id: z.string(),
  sessionId: z.string(),
  phone: z.string().nullable().optional(),
  email: z.string().nullable().optional(),
  type: z.nativeEnum(PasscodeType),
  code: z.string(),
  consumed: z.boolean().optional(),
  tryCount: z.number().optional(),
  createdAt: z.number().optional(),
});

export const Passcodes: GeneratedSchema<CreatePasscode> = Object.freeze({
  table: 'passcodes',
  tableSingular: 'passcode',
  fields: {
    id: 'id',
    sessionId: 'session_id',
    phone: 'phone',
    email: 'email',
    type: 'type',
    code: 'code',
    consumed: 'consumed',
    tryCount: 'try_count',
    createdAt: 'created_at',
  },
  fieldKeys: [
    'id',
    'sessionId',
    'phone',
    'email',
    'type',
    'code',
    'consumed',
    'tryCount',
    'createdAt',
  ],
  createGuard,
});
