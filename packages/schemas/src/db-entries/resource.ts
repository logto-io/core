// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { z } from 'zod';

import { GeneratedSchema, Guard } from '../foundations';
import { AccessTokenFormatType, SignAlgorithmType } from './custom-types';

export type ResourceDBEntry = {
  id: string;
  name: string;
  identifier: string;
  accessTokenTtl?: number;
  accessTokenFormat?: AccessTokenFormatType;
  signAlgorithm?: SignAlgorithmType;
};

export type Resource = {
  id: string;
  name: string;
  identifier: string;
  accessTokenTtl: number;
  accessTokenFormat: AccessTokenFormatType;
  signAlgorithm: SignAlgorithmType;
};

const guard: Guard<ResourceDBEntry> = z.object({
  id: z.string(),
  name: z.string(),
  identifier: z.string(),
  accessTokenTtl: z.number().optional(),
  accessTokenFormat: z.nativeEnum(AccessTokenFormatType).optional(),
  signAlgorithm: z.nativeEnum(SignAlgorithmType).optional(),
});

export const Resources: GeneratedSchema<ResourceDBEntry> = Object.freeze({
  table: 'resources',
  tableSingular: 'resource',
  fields: {
    id: 'id',
    name: 'name',
    identifier: 'identifier',
    accessTokenTtl: 'access_token_ttl',
    accessTokenFormat: 'access_token_format',
    signAlgorithm: 'sign_algorithm',
  },
  fieldKeys: ['id', 'name', 'identifier', 'accessTokenTtl', 'accessTokenFormat', 'signAlgorithm'],
  guard,
});
