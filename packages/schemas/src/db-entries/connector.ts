// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { z } from 'zod';

import {
  ConnectorConfig,
  connectorConfigGuard,
  ConnectorData,
  connectorDataGuard,
  GeneratedSchema,
  Guard,
} from '../foundations';
import { ConnectorType } from './custom-types';

export type ConnectorDBEntry = {
  id: string;
  identifier: string;
  enable?: boolean;
  type: ConnectorType;
  config?: ConnectorConfig;
  data?: ConnectorData;
  createdAt?: number;
};

export type Connector = {
  id: string;
  identifier: string;
  enable: boolean;
  type: ConnectorType;
  config: ConnectorConfig;
  data: ConnectorData;
  createdAt: number;
};

const guard: Guard<ConnectorDBEntry> = z.object({
  id: z.string(),
  identifier: z.string(),
  enable: z.boolean().optional(),
  type: z.nativeEnum(ConnectorType),
  config: connectorConfigGuard.optional(),
  data: connectorDataGuard.optional(),
  createdAt: z.number().optional(),
});

export const Connectors: GeneratedSchema<ConnectorDBEntry> = Object.freeze({
  table: 'connectors',
  tableSingular: 'connector',
  fields: {
    id: 'id',
    identifier: 'identifier',
    enable: 'enable',
    type: 'type',
    config: 'config',
    data: 'data',
    createdAt: 'created_at',
  },
  fieldKeys: ['id', 'identifier', 'enable', 'type', 'config', 'data', 'createdAt'],
  guard,
});
