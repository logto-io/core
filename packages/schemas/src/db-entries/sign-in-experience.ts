// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { z } from 'zod';

import {
  Branding,
  brandingGuard,
  LanguageInfo,
  languageInfoGuard,
  TermsOfUse,
  termsOfUseGuard,
  SignInMethods,
  signInMethodsGuard,
  ConnectorIds,
  connectorIdsGuard,
  GeneratedSchema,
  Guard,
} from '../foundations';

export type CreateSignInExperience = {
  id: string;
  branding?: Branding;
  languageInfo?: LanguageInfo;
  termsOfUse?: TermsOfUse;
  forgetPasswordEnabled?: boolean;
  signInMethods?: SignInMethods;
  socialSignInConnectorIds?: ConnectorIds;
};

export type SignInExperience = {
  id: string;
  branding: Branding;
  languageInfo: LanguageInfo;
  termsOfUse: TermsOfUse;
  forgetPasswordEnabled: boolean;
  signInMethods: SignInMethods;
  socialSignInConnectorIds: ConnectorIds;
};

const createGuard: Guard<CreateSignInExperience> = z.object({
  id: z.string(),
  branding: brandingGuard.optional(),
  languageInfo: languageInfoGuard.optional(),
  termsOfUse: termsOfUseGuard.optional(),
  forgetPasswordEnabled: z.boolean().optional(),
  signInMethods: signInMethodsGuard.optional(),
  socialSignInConnectorIds: connectorIdsGuard.optional(),
});

export const SignInExperiences: GeneratedSchema<CreateSignInExperience> = Object.freeze({
  table: 'sign_in_experiences',
  tableSingular: 'sign_in_experience',
  fields: {
    id: 'id',
    branding: 'branding',
    languageInfo: 'language_info',
    termsOfUse: 'terms_of_use',
    forgetPasswordEnabled: 'forget_password_enabled',
    signInMethods: 'sign_in_methods',
    socialSignInConnectorIds: 'social_sign_in_connector_ids',
  },
  fieldKeys: [
    'id',
    'branding',
    'languageInfo',
    'termsOfUse',
    'forgetPasswordEnabled',
    'signInMethods',
    'socialSignInConnectorIds',
  ],
  createGuard,
});
